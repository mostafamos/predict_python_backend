name: Build and deploy Python app to Azure Web App - Predict-python-backend

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Check out the code from the GitHub repository
      - uses: actions/checkout@v2

      # Set up the Python version to use
      - name: Set up Python version
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      # Create and activate a virtual environment, upgrade pip, and install dependencies
      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Package the application into a zip file for deployment
      - name: Zip artifact for deployment
        run: zip -r release.zip .

      # Upload the zip file as an artifact for the deploy job to use
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v2
        with:
          name: python-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write # This is required for requesting the JWT

    steps:
      # Clean up before deployment
      - name: Clean up before deployment
        run: |
          rm -f release.zip

      # Download the artifact from the build job
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: python-app

      # Unzip the downloaded artifact
      - name: Unzip artifact for deployment
        run: unzip -o release.zip

      # Log in to Azure using Azure CLI with service principal credentials
      - name: Azure CLI Login
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: |
          az login --service-principal --username $AZURE_CLIENT_ID --password $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID

      # Clean up after login
      - name: Clean up after login
        run: |
          rm -f release.zip

      # Deploy to Azure Web App using Azure Web Apps Deploy action
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'Predict-python-backend'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
